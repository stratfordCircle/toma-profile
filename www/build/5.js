webpackJsonp([5],{342:function(e,o,n){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),n.d(o,"AttestPageModule",function(){return s});var t=n(0),c=n(15),i=n(349),r=this&&this.__decorate||function(e,o,n,t){var c,i=arguments.length,r=i<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,n,t);else for(var s=e.length-1;s>=0;s--)(c=e[s])&&(r=(i<3?c(r):i>3?c(o,n,r):c(o,n))||r);return i>3&&r&&Object.defineProperty(o,n,r),r},s=function(){function e(){}return e=r([Object(t.L)({declarations:[i.a],imports:[c.e.forChild(i.a)]})],e)}()},349:function(e,o,n){"use strict";n.d(o,"a",function(){return m});var t=n(0),c=n(65),i=n(15),r=n(43),s=(n.n(r),n(54)),l=(n.n(s),n(19)),a=n(23),d=n(217),u=n.n(d),h=this&&this.__decorate||function(e,o,n,t){var c,i=arguments.length,r=i<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,n):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(e,o,n,t);else for(var s=e.length-1;s>=0;s--)(c=e[s])&&(r=(i<3?c(r):i>3?c(o,n,r):c(o,n))||r);return i>3&&r&&Object.defineProperty(o,n,r),r},p=this&&this.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},f=this&&this.__awaiter||function(e,o,n,t){return new(n||(n=Promise))(function(c,i){function r(e){try{l(t.next(e))}catch(e){i(e)}}function s(e){try{l(t.throw(e))}catch(e){i(e)}}function l(e){e.done?c(e.value):new n(function(o){o(e.value)}).then(r,s)}l((t=t.apply(e,o||[])).next())})},g=this&&this.__generator||function(e,o){function n(n){return function(r){return function(n){if(t)throw new TypeError("Generator is already executing.");for(;s;)try{if(t=1,c&&(i=c[2&n[0]?"return":n[0]?"throw":"next"])&&!(i=i.call(c,n[1])).done)return i;switch(c=0,i&&(n=[0,i.value]),n[0]){case 0:case 1:i=n;break;case 4:return s.label++,{value:n[1],done:!1};case 5:s.label++,c=n[1],n=[0];continue;case 7:n=s.ops.pop(),s.trys.pop();continue;default:if(i=s.trys,!(i=i.length>0&&i[i.length-1])&&(6===n[0]||2===n[0])){s=0;continue}if(3===n[0]&&(!i||n[1]>i[0]&&n[1]<i[3])){s.label=n[1];break}if(6===n[0]&&s.label<i[1]){s.label=i[1],i=n;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(n);break}i[2]&&s.ops.pop(),s.trys.pop();continue}n=o.call(e,s)}catch(e){n=[6,e],c=0}finally{t=i=0}if(5&n[0])throw n[1];return{value:n[0]?n[1]:void 0,done:!0}}([n,r])}}var t,c,i,r,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:n(0),throw:n(1),return:n(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r},m=function(){function e(e,o,n,t,i){this.navCtrl=e,this.datepipe=o,this.navParams=n,this._ALERT=t,this.cookieService=i,this.clientCypher="ishkabibble",this.editRecords=[],this.tempElement=[],this._COLL=c.a.cycleCollection1,this.navParams.get("conferenceNameString")&&(this.conferenceNameForQuery=this.navParams.get("conferenceNameString"),console.log("conference name from Param:"+this.conferenceNameForQuery)),this._DB=r.firestore();this._DB.settings({timestampsInSnapshots:!0})}return e.prototype.ngOnInit=function(){this.ionViewCanEnter()},e.prototype.displayAlert=function(e,o){this._ALERT.create({title:e,subTitle:o,buttons:[{text:"Got It!"}]}).present()},e.prototype.ionViewCanEnter=function(){var e=this;return new Promise(function(o,n){e.getDocuments(e.conferenceNameForQuery).then(function(n){e.editRecords=n,o(!0)}).catch(function(){o(!1)})})},e.prototype.ionViewDidLoad=function(){console.log("ionViewDidEnter")},e.prototype.testAsync=function(){this.editRecords[1].hours1>0&&(console.log("searching session 1"),this.checkSession=this.editRecords[1].session,this.checkElement=document.getElementsByName(this.checkSession),console.log("type: "+this.checkElement[0].type),this.checkElement[0].checked=!0),this.editRecords[2].hours1>0&&(console.log("searching session 2"),this.checkSession=this.editRecords[2].session,this.checkElement=document.getElementsByName(this.checkSession),console.log("type: "+this.checkElement[0].type),this.checkElement[0].checked=!0),this.editRecords[3].hours1>0&&(console.log("searching session 3"),this.checkElement=document.getElementsByName("3"),console.log("type: "+this.checkElement[0].type),this.checkElement[0].checked=!0)},e.prototype.setAllCheckboxes=function(e){var o=this;console.log("pop default");document.getElementsByName("9")[0].checked=!0;var n=document.getElementsByName("8");this.getDocuments(e).then(function(e){if(e){var t=0;for(o.editRecords=e,o.editRecords[2].hours1>0&&(n[0].checked=!0);t<o.editRecords.length;){if(console.log("this.editRecords[i].hours1:"+o.editRecords[t].hours1),o.editRecords[t].hours1>0){console.log("this.editRecords[i].session:"+o.editRecords[t].session);o.editRecords[t].session.toString();document.getElementsByName(o.editRecords[t].session)[0].checked=!0}t++}}})},e.prototype.setOneChecked_try2=function(e){document.getElementsByName(this.editRecords[20].session)[0].checked=!0;var o=[];return o.push({set:"yep"}),o},e.prototype.setOneChecked=function(e){return f(this,void 0,void 0,function(){return g(this,function(o){switch(o.label){case 0:return[4,document.getElementsByName(this.editRecords[e].session)];case 1:return[2,o.sent()]}})})},e.prototype.loadConferenceRecords=function(e){var o=this;console.log("pop default"),this.getDocuments(e).then(function(e){o.editRecords=e,console.log("length: "+o.editRecords.length),console.log("show data on load: ",JSON.stringify(o.editRecords))})},e.prototype.findPairedSession=function(e){switch(console.log("incomingSession to findPairedSession: "+e),e){case 18:return 19;case 19:return 18;case 20:return 21;case 21:return 20;case 22:return 23;case 23:return 22;default:return console.log("in switch default"),0}},e.prototype.getColor=function(e){return console.log("sessionId in getColor: "+e),18===e||19===e?"#d1d1e0":20===e||21===e?"#a4a4c1":22===e||23===e?"#d1d1e0":void 0},e.prototype.concurrentCheck=function(e){console.log("concurrentCheck"+e);var o=document.getElementsByName(e);if(!0===o[0].checked){console.log("concurrentCheck x:"+o[0].checked);var n=this.findPairedSession(e).toString();if(console.log("result from findPairedSession:"+n),"0"!==n){!0===document.getElementsByName(n)[0].checked&&(o[0].checked=!1,this.displayAlert("You are trying to select Concurrent Sessions","Please uncheck the conflicing session and then make your choice again."))}}else console.log("not checked")},e.prototype.decryptString=function(e){return u.a.AES.decrypt(e.toString(),this.clientCypher).toString(u.a.enc.Utf8)},e.prototype.getDocuments=function(e){var o=this;console.log("getDocs"),console.log("conference: ",e),console.log("this._COLL: ",this._COLL);var n=this.decryptString(this.cookieService.get("tokenFB_Num"));this.cookieService.get("tokenTOMAAdmin")&&(this.isAdmin=!0),this.isAdmin&&(n="9999999998");var t;return new Promise(function(c,i){var r=o._DB.collection(o._COLL);(r=(r=(r=r.where("conference","==",e)).where("aoa_number","==",n)).orderBy("session")).get().then(function(e){var n=[];e.forEach(function(e){var c=e.data().session,i=e.data().hours1,r=e.data().hours_approved1;t=r>0;var s=e.data().ce_date.toDate(),l=o.datepipe.transform(s,"yyyy-MM-dd");console.log("session: "+c),console.log("time: "+e.data().other),console.log("description "+e.data().description),console.log("hours1: "+i),console.log("hours_approved1: "+r),console.log("session: "+c),n.push({id:e.id,session:c,courseCredit:i,checked:t,ce_date:l,time:e.data().other,description:e.data().description,accreditor:e.data().accreditor})}),c(n)}).catch(function(e){i(e)})})},e.prototype.saveNotice=function(e){console.log("event:",JSON.stringify(e));for(var o,n=document.getElementById("dynamicConference").elements,t=0;o=n[t++];)console.log("looping elements:",o.id+" "+o.type+" "+o.value),"checkbox"===o.type&&""!==o.value&&(console.log("value: "+o.value),!0===o.checked?(this.updateDoc("irrelevant",o.id,{hours_approved1:o.value}),this.updateDoc("irrelevant",o.id,{approval:"Yes"})):(this.updateDoc("irrelevant",o.id,{hours_approved1:0}),this.updateDoc("irrelevant",o.id,{approval:""})));this.displayAlert("Saving Conference Attestation records...","")},e.prototype.updateDoc=function(e,o,n){var t=this;return new Promise(function(e,c){t._DB.collection(t._COLL).doc(o).update(n).then(function(o){e(o)}).catch(function(e){c(e)})})},e=h([Object(t.n)({selector:"page-attest",template:'\x3c!--\n  Generated template for the AttestPage page.\n\n  See http://ionicframework.com/docs/components/#navigation for more info on\n  Ionic pages and navigation.\n--\x3e\n\x3c!-- <ion-header>\n\n  <ion-navbar>\n    <ion-title>CME Attestation for <strong>{{this.conferenceNameForQuery}}</strong></ion-title>\n  </ion-navbar>\n\n</ion-header> --\x3e\n\n\x3c!-- hideBackButton="true" --\x3e\n\n<ion-header>\n  <ion-navbar class="navbarStyle" >\n    <ion-title>\n      <ion-label class="print-greeting-landing" text-wrap>\n        <ion-row>\n          <ion-col col-bottom col-4>\n              <img src="../../assets/imgs/TOMAlogo.jpg" height="65">\n          </ion-col>\n          <ion-col col-bottom col-8>{{ this.conferenceNameForQuery }}</ion-col>\n        </ion-row>\n      </ion-label>\n    </ion-title>\n  </ion-navbar>\n</ion-header>\n\n\n<ion-content padding>\n\n        <form id="dynamicConference">\n<ion-row>\n  <ion-col col-3>\n    <ion-row>\n    <ion-col col-6 class="col-title">Date</ion-col>\n    <ion-col col-6 class="col-title">Time</ion-col>\n    </ion-row>\n</ion-col>\n  <ion-col col-9>\n    <ion-row>\n    <ion-col col-8 class="col-title">Description</ion-col>\n    \x3c!-- <ion-col col-2 class="col-title">Accreditor</ion-col> --\x3e\n    <ion-col col-2 text-center class="col-title">Credits</ion-col>\n    <ion-col col-2 text-center class="col-title">Attest</ion-col>\n  </ion-row>\n  </ion-col>\n</ion-row>\n\n\x3c!-- let newParse = this.supporting_doc.indexOf(\'"|\'); // this is the character number of the end of the full path for one support doc\nlet newAssembly = this.supporting_doc.substring(1,newParse); // this is one support doc\n\nlet getName1 = newAssembly.indexOf(this.aoa_number);\n\nlet getName2 = newAssembly.substring(getName1 + 1);\n\nstring.split(subString, index).join(subString).length;\n\n  record.description.substring(record.description.split(\'-\', 2).join(\'-\').length + 1);\n --\x3e\n       \x3c!-- <ion-row class="row-custom-bg" *ngFor="let record of editRecords"> --\x3e\n      <ion-row [ngStyle]="{\'background-color\': getColor(record.session)}" *ngFor="let record of editRecords">\n\n          \n        \x3c!-- ==>  {{record.id}} = {{record.courseCredit}} <br> --\x3e\n        \x3c!-- CAN I DYNAMICALLY CREATE THE INPUT ID AND MAKE IT THE SAME AS THE RECORD ID? (OR DO i EVEN NEED IT?)\n        PROBABLY NEED IT - AND NEED TO THINK OF THIS AS A ONE PAGE SUBMIT FORM (OR MULTIPLE PAGE SUBMIT) --\x3e  \n      <ion-col col-3>\n        <ion-row>\n        <ion-col col-6>{{record.ce_date | date:\'MM/dd/yyyy\' }}</ion-col>\n        <ion-col col-6>{{record.time}}</ion-col>\n      </ion-row>\n      </ion-col>\n      <ion-col col-9>\n        <ion-row>\n        <ion-col col-8>{{record.description}}</ion-col>\n        \x3c!-- <ion-col col-2>{{record.accreditor}} </ion-col> --\x3e\n\n     \x3c!--    CHANGE TO RADIO BUTTON SELECTION FOR EACH PAIRED SET\n        TRY TO SET THE ID OF THE RADIO SET TO THE RECORD.ID\n        THEN PASS THE VALUE OF THE SELECTED \n        THAT MIGHT LET US USE THE SAME BACKEND UPDATE --\x3e\n       \x3c!--  <ion-row> --\x3e\n        <ion-col col-2 text-center class="creditSize"> {{record.courseCredit}}\n           \x3c!--  <input id=\'{{record.id}}\' size="3" type="text" value="{{record.courseCredit}}"> --\x3e\n            \x3c!-- IF WE DON\'T CHANGE THE ID OR VALUE SETTINGS HERE THEN THE SAVE AND UPDATE FUNCTIONS WILL WORK --\x3e\n        </ion-col>\n        \x3c!-- [ngStyle]="{\'background-color\': getColor(record.session)}" --\x3e\n        <ion-col text-center col-2>\n            \x3c!-- <input id=\'{{record.id}}\' type="checkbox" name="{{record.session}}" value="{{record.courseCredit}}" (click)="concurrentCheck(record.session)"> --\x3e \x3c!-- {{record.session}} --\x3e\n            \x3c!-- <div *ngIf="this.alreadySigned !== true"> --\x3e\n\x3c!--             *ngIf="{{!record.checked}}"\n            *ngIf="{{record.checked}}" --\x3e\n            <input *ngIf="record.checked === true" checked id=\'{{record.id}}\' type="checkbox" name="{{record.session}}" value="{{record.courseCredit}}" (click)="concurrentCheck(record.session)"> \n            <input *ngIf="record.checked !== true" id=\'{{record.id}}\' type="checkbox" name="{{record.session}}" value="{{record.courseCredit}}" (click)="concurrentCheck(record.session)"> \n            \x3c!-- <input id=\'Y1OguXVXxq3dKHZ1yv3J\' type="checkbox" name="5" value="23" (click)="concurrentCheck(\'5\')"> --\x3e \x3c!-- {{record.session}} --\x3e\n            \x3c!-- {{record.id}} --\x3e \x3c!-- {{record.courseCredit}} --\x3e\n            \n        \x3c!-- <ion-input id=\'{{record.id}}\' name=\'{{record.id}}\' [(ngModel)]="hours1" type="text" value="{{record.courseCredit}}"></ion-input> --\x3e \x3c!--  (ionChange)="saveNotice(record.id,\'0conHrsFS30kFX6kNkzU\')"> --\x3e\n        </ion-col>\n      </ion-row>\n       </ion-col>                \n         </ion-row>\n        </form>\n       \x3c!--  <ion-input *ngIf="this.memberEditAsConference" min=".25" max="100" step=".25" type="number" formControlName="hours1" [(ngModel)]="hours1"></ion-input> --\x3e\n        \x3c!-- {{record.id}} --\x3e\n        \n        <p>By clicking \'I Attest\', I am confirming that the CME credits entered in this form are correct.</p>\n        <button ion-button color="secondary" (click)="saveNotice($event)">I Attest</button>\n        \x3c!-- <button ion-button color="secondary" (click)="setAllCheckboxes(\'TOMA/TXACOFP 12th Annual Convention\')">set checks</button> --\x3e\n\n</ion-content>\n'}),p("design:paramtypes",[i.h,a.d,i.i,i.a,l.a])],e)}()}});