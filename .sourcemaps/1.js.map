{"version":3,"sources":["../../src/pages/manage-document/manage-document.module.ts","../../src/pages/manage-document/manage-document.ts"],"names":["ManageDocumentPageModule","__decorate","Object","__WEBPACK_IMPORTED_MODULE_0__angular_core__","declarations","__WEBPACK_IMPORTED_MODULE_2__manage_document__","imports","__WEBPACK_IMPORTED_MODULE_1_ionic_angular__","forChild","ManageDocumentPage","navCtrl","params","_FB","_DB","_ALERT","cookieService","srk","this","docList","docListNames","date_entered","accreditor","credit_type1","credit_type2","credit_type3","delivery_method","description","docID","isEditable","approval","approval_reason","supporting_doc","aoa_number","supporting_doc_from_db","title","memberEditAsConference","_COLL","__WEBPACK_IMPORTED_MODULE_7__environments_environment__","cycleCollection1","isAdmin","isDisabled","isMissingSupportDoc","disableAOA_Number","loadProgress","submitAttempt","console","log","tempCOL","form","group","ce_date","__WEBPACK_IMPORTED_MODULE_1__angular_forms__","required","hours1","compose","pattern","hours_approved1","hours2","hours_approved2","hours3","hours_approved3","get","checkID","decryptString","record","location","conference","id","created_by","created_by_process","date_created","undefined","checkLast","newParse","indexOf","newAssembly","substring","getName1","getName2","getName3","getNameFinal","push","fullPath","justName","prototype","changeNumber","create","subTitle","buttons","text","handler","role","present","setAccreditor","$event","accreditorValue","document","getElementById","value","alert","target","changeListener","_this","numFiles","files","length","i","uploadImageAsPromise","then","data","res","JSON","stringify","name","catch","error","imageFile","uploadUser","self","Promise","resolve","reject","docPath","task","__WEBPACK_IMPORTED_MODULE_5_firebase__","ref","put","on","snapshot","bytesTransferred","totalBytes","displayProgress","err","downloadURL","perc","saveDocument","val","controls","isNaN","parseFloat","getID","Date","localtestCreate","toLocaleString","date_created_local","replace","temp_ce_date","ce_date_localtime","updateDocument","isDataGridReset","displayAlert","message","valid","addDocument","clearForm","HomePage","OpenImage","imageUrl","window","open","selector","template","__WEBPACK_IMPORTED_MODULE_2_ionic_angular__","__WEBPACK_IMPORTED_MODULE_3__providers_database_database__","__WEBPACK_IMPORTED_MODULE_4_ngx_cookie_service__","__WEBPACK_IMPORTED_MODULE_8__providers_srk_services_srk_services__"],"mappings":"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","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ManageDocumentPage } from './manage-document';\n\n@NgModule({\n  declarations: [\n    ManageDocumentPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ManageDocumentPage),\n  ],\n})\nexport class ManageDocumentPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/manage-document/manage-document.module.ts","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AlertController, IonicPage, NavController, NavParams } from 'ionic-angular';\r\nimport { DatabaseProvider } from '../../providers/database/database';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport * as firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { clientVars } from './../../environments/environment';\r\n//import { HomePage } from '../home/home';\r\n//import { ProgressBarComponent } from '../../components/progress-bar/progress-bar';\r\n\r\nimport { SrkServicesProvider } from '../../providers/srk-services/srk-services';\r\n\r\n@IonicPage({\r\n  name: \"manage-document\"\r\n})\r\n@Component({\r\n  selector: \"page-manage-document\",\r\n  templateUrl: \"manage-document.html\"\r\n})\r\nexport class ManageDocumentPage {\r\n\r\n  oneUrl;\r\n//  docList : any;\r\n\r\n\r\n  public docList = [];\r\n  public docListNames = [];\r\n  public records: any;\r\n  public date_entered: string = \"\";\r\n  public accreditor: string = \"\";\r\n  public credit_type1: string = \"\";\r\n  public hours1: number;\r\n  public hours_approved1: number;\r\n  public credit_type2: string = \"\";\r\n  public hours2: number;\r\n  public hours_approved2: number;\r\n  public credit_type3: string = \"\";\r\n  public hours3: number;  \r\n  public hours_approved3: number;\r\n  public hours_total: number;\r\n  public delivery_method: string = \"\";\r\n  public description: string = \"\";\r\n  public docID: string = \"\";\r\n  public isEditable: boolean = false;\r\n  public approval: string = \"\";\r\n  public approval_reason: string = \"\";\r\n  public supporting_doc: string = \"\";\r\n  public aoa_number: string = \"\";\r\n  public supporting_doc_from_db: string = \"\";\r\n  public numFiles: number;\r\n  public title: string = \"CME Record - Add\";\r\n  conference: string;\r\n  memberEditAsConference: boolean = false;\r\n  \r\n//TEMP CHANGE \r\n  _COLL = clientVars.cycleCollection1; // MAY REMOVE THIS ALTOGETHER\r\n  \r\n  public tempCOL: String;\r\n  isAdmin: boolean = false;\r\n  isDisabled: boolean = true;\r\n  isMissingSupportDoc: boolean = true;\r\n  disableAOA_Number: boolean = true;\r\n  public fileJustUploaded: string;\r\n  public loadProgress : number = 0;\r\n\r\n  public created_by; \r\n  public created_by_process; \r\n  public date_created; \r\n  public ce_date;\r\n\r\n  form: FormGroup;\r\n  submitAttempt: boolean = false;\r\n\r\n  file: File;\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public params: NavParams,\r\n    public _FB: FormBuilder,\r\n    private _DB: DatabaseProvider,\r\n    private _ALERT: AlertController,\r\n    public cookieService: CookieService,\r\n    public srk: SrkServicesProvider\r\n  ) {\r\n\r\n   this.docList = [];\r\n   this.docListNames = [];\r\n   console.log('set 1')\r\n   this.isDisabled = true;\r\n  \r\n\r\n    this.fileJustUploaded;\r\n    this.cookieService;\r\n    this.tempCOL = this._COLL;\r\n    \r\n    // NEW RECORD FORM VALUES\r\n      this.form = _FB.group({\r\n      ce_date: [\"\", Validators.required],\r\n      //date_entered: [\"\", Validators.required],\r\n      accreditor: [\"\", Validators.required],\r\n      credit_type1: [\"\", Validators.required],\r\n      hours1: [\"\", Validators.compose([Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/),Validators.required])], // allow two decimals\r\n      hours_approved1: [\"\", Validators.compose([Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)])], // allow two decimals\r\n      credit_type2: [\"\", \"\"],\r\n      hours2: [\"\", Validators.compose([Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)])], // allow two decimals\r\n      hours_approved2: [\"\", Validators.compose([Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)])], // allow two decimals\r\n      credit_type3: [\"\", \"\"],\r\n      hours3: [\"\", Validators.compose([Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)])], // allow two decimals\r\n      hours_approved3: [\"\", Validators.compose([Validators.pattern(/^[0-9]+(\\.[0-9]{1,2})?$/)])], // allow two decimals\r\n      //delivery_method: [\"\", Validators.required],\r\n      description: [\"\", Validators.required],\r\n      supporting_doc: [\"\", \"\"],\r\n      aoa_number: [\"\", Validators.required],\r\n      approval:  [\"\", \"\"],\r\n      approval_reason:  [\"\", \"\"]\r\n    });\r\n\r\n    let adminCookieCheck = this.cookieService.get('tokenTOMAAdmin');\r\n      if ( adminCookieCheck ) {\r\n          this.isAdmin = true;\r\n          console.log('set 2')\r\n          this.isDisabled = false; \r\n          this.disableAOA_Number = false;\r\n        }\r\n\r\n\r\n    // REVIEW THIS SECTION    \r\n    let checkID = this.cookieService.get('tokenFB_Num');\r\n    if ( checkID ) {\r\n//      alert('test');\r\n      if (this.isAdmin)      {\r\n        \r\n      }\r\n\r\n      this.aoa_number = this.srk.decryptString(checkID);\r\n\r\n    }\r\n\r\n    // UP TO HERE\r\n\r\n    // If we have navigation parameters then we need to\r\n    // parse these as we know these will be used for\r\n    // editing an existing record\r\n\r\n    if (params.get(\"isEdited\")) { // COMING FROM HOME - THIS IS SET AS EDITED ON THE WAY INTO THE DOCUMENT MANAGEMENT FILE\r\n\r\n      let record = params.get(\"record\");\r\n\r\n      this.ce_date = record.location.ce_date;\r\n\r\n      console.log('conference? ' + record.location.conference)\r\n\r\n      //GIVE MEMBER SOME EDIT ABILITY IF THIS IS A CONFERENCE ATTESTATION\r\n      if (record.location.conference)\r\n      {this.memberEditAsConference = true}\r\n      else\r\n      {this.memberEditAsConference = false}\r\n\r\n      console.log('ce_date from isedited 144: ' + this.ce_date);\r\n\r\n\r\n      console.log('manage docs constructor id' + record.location.id);\r\n\r\n      this.date_entered = record.location.date_entered;\r\n      this.accreditor = record.location.accreditor;\r\n     \r\n      this.credit_type1 = record.location.credit_type1;\r\n      this.hours1 = record.location.hours1;\r\n      this.hours_approved1 = record.location.hours_approved1;\r\n\r\n      this.credit_type2 = record.location.credit_type2;\r\n      this.hours2 = record.location.hours2;      \r\n      this.hours_approved2 = record.location.hours_approved2;\r\n\r\n      this.credit_type3 = record.location.credit_type3;\r\n      this.hours3 = record.location.hours3;      \r\n      this.hours_approved3 = record.location.hours_approved3;\r\n\r\n//      this.hours_total = parseInt(this.hours1) +  parseInt(this.hours2) + parseInt(this.hours3);\r\n      \r\n      this.delivery_method = record.location.delivery_method;\r\n      this.description = record.location.description;\r\n      //alert('description' + this.description);\r\n      this.supporting_doc = record.location.supporting_doc;\r\n      this.supporting_doc_from_db = record.location.supporting_doc;\r\n      this.aoa_number = record.location.aoa_number;\r\n      //alert('aoa num' + this.aoa_number);\r\n      this.approval = record.location.approval;\r\n      this.approval_reason = record.location.approval_reason;\r\n      // AUDIT FIELDS NEED TO DISPLAY THE DATA THAT IS CURRENTLY IN THE DATABASE, NOT THE DATA THAT WOULD REPLACE IT WITH AN UPDATE\r\n      \r\n      // THIS JUST PULLS FROM THE HOME PAGE:\r\n      console.log('record.created_by: ' + record.location.created_by);\r\n      this.created_by = record.location.created_by;\r\n      this.created_by_process = record.location.created_by_process; // WHEN IMPORTED FROM GOOGLE SHEET, THIS WILL BE SET AS 'system'\r\n      this.date_created = record.location.date_created;\r\n\r\n      if (this.supporting_doc === undefined) {}\r\n      else\r\n      if ((this.supporting_doc != \"\") && (this.supporting_doc)) {\r\n\r\n        //console.log('this.supporting_doc ' + this.supporting_doc);\r\n\r\n      let checkLast = 1;\r\n      //let x = 0;\r\n\r\n        // ON WAY INTO VIEW - PULL APART THE EXISTING DOCUMENT FIELD - REDUCES THIS.SUPPORTING_DOC UNTIL IT IS EMPTY\r\n        while(checkLast > 0)\r\n        { \r\n\r\n          //build more complex array to add a name element?\r\n          \r\n          let newParse = this.supporting_doc.indexOf('\"|'); // this is the character number of the end of the full path for one support doc\r\n          let newAssembly = this.supporting_doc.substring(1,newParse); // this is one support doc\r\n          \r\n          let getName1 = newAssembly.indexOf(this.aoa_number);\r\n          \r\n          let getName2 = newAssembly.substring(getName1 + 1);\r\n          \r\n          let startOfName = getName2.indexOf('%2F');\r\n\r\n          let getName3 = getName2.substring(getName2.indexOf('%2F') + 3);\r\n\r\n          let getNameFinal = getName3.substring(0,getName3.indexOf('?'));\r\n\r\n          this.docList.push({\r\n            fullPath: newAssembly,\r\n            justName: getNameFinal\r\n          }); \r\n          \r\n          // this.docList.push(newAssembly);\r\n          //\r\n          this.supporting_doc = this.supporting_doc.substring(newParse + 2); // cut out first doc from path and start again\r\n          checkLast = this.supporting_doc.indexOf('\"|');\r\n          //x++;\r\n        }\r\n\r\n      }\r\n\r\n      this.docID = record.location.id;\r\n      this.approval = record.location.approval;\r\n      this.isEditable = true;\r\n      this.title = \"CME Record - View\";\r\n\r\n    } else\r\n    {\r\n      console.log('set 3')\r\n      this.isDisabled = false; \r\n    }\r\n\r\n  }\r\n\r\n  changeNumber() : void {\r\n    let alert : any     = this._ALERT.create({\r\n      title      : 'ID Change',\r\n      subTitle   : 'You are changing the AOA Number to ' + this.aoa_number,\r\n      buttons    : [{\r\n       text      : 'Okay',\r\n       handler   : () =>\r\n       {\r\n       }\r\n     },\r\n     {\r\n      text: 'Cancel Change',\r\n      role: 'cancel',\r\n      handler: () => {\r\n        console.log('Cancel clicked');\r\n      }\r\n    }\r\n    ]\r\n   });\r\n    alert.present();\r\n  } \r\n\r\n  setAccreditor($event) {\r\n\r\n    var accreditorValue = (<HTMLInputElement>document.getElementById(\"accreditor\")).value;\r\n\r\n    alert('event test ' + $event.target.value)\r\n\r\n    alert('test change: ' + accreditorValue)\r\n\r\n  }\r\n\r\n  changeListener($event) : void { // grabs the file object - the put below does the upload\r\n\r\n    //alert('do we know the aoa number? ' + this.aoa_number );\r\n\r\n    this.loadProgress = 0;\r\n    //this.file = $event.target.files[0];\r\n    this.numFiles =  $event.target.files.length; //[0]\r\n    //alert('name? ' + $event.target.files[0].name);\r\n\r\n    //console.log('num files' + this.numFiles);\r\n\r\n     for (var i = 0; i < this.numFiles; i++) {\r\n\r\n      this.uploadImageAsPromise($event.target.files[i], this.aoa_number)\r\n       .then((data)=> {\r\n        let res = JSON.stringify(data);\r\n        this.supporting_doc = this.supporting_doc + res + '|';\r\n        // srk - CAN ADD A NEW FIELD ALTOGETHER TO HOLD THE DOCUMENT NAME - OR PARSE THIS STRING APART CONSISTENTLY TO SHOW THE NAME... \r\n        let newParse = this.supporting_doc.indexOf('\"|'); // this is the character number of the end of the full path for one support doc\r\n        let newAssembly = this.supporting_doc.substring(1,newParse); // this is one support doc\r\n        //console.log ('newAssembly ' + '***' + newAssembly + '***');\r\n        //this.docListNames.push($event.target.files[i].name);\r\n        this.isMissingSupportDoc = false;\r\n        this.docList.push({\r\n          fullPath: newAssembly,\r\n          justName: $event.target.files[i].name\r\n        });\r\n        \r\n        //this.docList.push(newAssembly);\r\n\r\n        \r\n      }).catch(error => {\r\n        //console.log(\"UploadDocument \", error.message);\r\n      }); \r\n\r\n    }\r\n \r\n  }\r\n\r\n//Handle waiting to upload each file using promise\r\nuploadImageAsPromise (imageFile, uploadUser) {\r\n\r\nlet aoa_number = uploadUser;\r\nlet self = this;\r\n\r\n/*  IMMEDIATELY INVOKED FUNCTION IIFE (IFFY) \r\n  (function () {\r\n\r\n    var steve = 'cool';\r\n\r\n  }()); \r\n*/\r\n\r\n  return new Promise(function (resolve, reject) {\r\n\r\n    let docPath = aoa_number + '/' + imageFile.name;\r\n    let fileRef = firebase.storage().ref(docPath);\r\n\r\n      //Upload file with the firebase api\r\n      var task = fileRef.put(imageFile);\r\n\r\n      //Update progress bar\r\n      task.on('state_changed',\r\n          function progress(snapshot){\r\n            var percentage = task.snapshot.bytesTransferred / task.snapshot.totalBytes * 100;\r\n            this.loadProgress = percentage; \r\n             // ?? srk this.numFiles = 55;\r\n            //console.log('this.loadProgress ' + this.loadProgress);\r\n            self.displayProgress(this.loadProgress);\r\n          },\r\n          function error(err){\r\n                reject(err);\r\n          },\r\n          function complete(){\r\n              var downloadURL = task.snapshot.downloadURL;\r\n              this.supporting_doc = this.supporting_doc + task.snapshot.downloadURL;\r\n            //console.log('url ' + this.supporting_doc);\r\n            resolve(downloadURL);\r\n          }\r\n      );\r\n  });\r\n} \r\n\r\ndisplayProgress(perc) {\r\n  //console.log('perc ' + perc);\r\n  this.loadProgress = perc;\r\n}\r\n\r\n  /**\r\n   * Saves form data as newly added/edited record within Firebase Realtime\r\n   * database and handles uploading of media asset to Firebase Storage\r\n   *\r\n   * @public\r\n   * @method saveDocument\r\n   * @param  val          {any}              Form data\r\n   * @return {none}\r\n   */\r\n  saveDocument(val: any): void {\r\n\r\n      console.log('in saveDocument');\r\n\r\n      this.submitAttempt = true;\r\n\r\n//      console.log(\"hours_approved1 \" +  this.form.controls[\"hours_approved1\"].value);\r\n//      console.log(\"hours_approved2 \" +  this.form.controls[\"hours_approved2\"].value);\r\n//      console.log(\"hours_approved3 \" +  this.form.controls[\"hours_approved3\"].value);\r\n\r\n      /* console.log('date on enter: ' + this.form.controls[\"ce_date\"].value);\r\n\r\n      alert('date on enter: ' + this.form.controls[\"ce_date\"].value); */\r\n\r\n      // let ce_date: string = this.form.controls[\"ce_date\"].value;\r\n\r\n\r\n      let accreditor: string = this.form.controls[\"accreditor\"].value;\r\n\r\n      var hours1 = 0;\r\n      var hours2 = 0;\r\n      var hours3 = 0;\r\n      var hours_approved1 = 0;\r\n      var hours_approved2 = 0;\r\n      var hours_approved3 = 0;\r\n\r\n      let credit_type1: string = this.form.controls[\"credit_type1\"].value;\r\n\r\n      console.log('credit type 2 |' + this.form.controls[\"credit_type2\"].value + '|');\r\n\r\n      if (this.form.controls[\"credit_type2\"].value !== undefined){\r\n      this.credit_type2 = this.form.controls[\"credit_type2\"].value;\r\n      } else {this.credit_type2 = \"\"}\r\n\r\n      if (this.form.controls[\"credit_type3\"].value !== undefined){\r\n        this.credit_type3 = this.form.controls[\"credit_type3\"].value;\r\n        } else {this.credit_type3 = \"\"}\r\n\r\n       if (!isNaN(this.form.controls[\"hours1\"].value)) {\r\n//        console.log('1');\r\n        hours1 =  parseFloat(this.form.controls[\"hours1\"].value);\r\n      }\r\n      if (!isNaN(this.form.controls[\"hours2\"].value)) {\r\n//        console.log('2');\r\n        hours2 =  parseFloat(this.form.controls[\"hours2\"].value);\r\n      }\r\n      if (!isNaN(this.form.controls[\"hours3\"].value)) {\r\n//        console.log('3');\r\n        hours3 =  parseFloat(this.form.controls[\"hours3\"].value);\r\n      }\r\n\r\n      if (!isNaN(this.form.controls[\"hours_approved1\"].value)) {\r\n//        console.log('1a');\r\n        hours_approved1 =  parseFloat(this.form.controls[\"hours_approved1\"].value);\r\n      }\r\n      if (!isNaN(this.form.controls[\"hours_approved2\"].value)) {\r\n//        console.log('2a');\r\n        hours_approved2 =  parseFloat(this.form.controls[\"hours_approved2\"].value);\r\n      }\r\n      if (!isNaN(this.form.controls[\"hours_approved3\"].value)) {\r\n//        console.log('3a');\r\n        hours_approved3 =  parseFloat(this.form.controls[\"hours_approved3\"].value);\r\n      }\r\n\r\n\r\n      /* delivery_method: string = this.form.controls[\"delivery_method\"].value, */\r\n      let description: string = this.form.controls[\"description\"].value;\r\n      let supporting_doc: string = this.supporting_doc;\r\n      //console.log('supporting doc insert: ' + supporting_doc);\r\n      let approval: string = this.form.controls[\"approval\"].value;\r\n      let approval_reason: string = this.form.controls[\"approval_reason\"].value;\r\n\r\n      if (this.isAdmin){\r\n        this.aoa_number = this.form.controls[\"aoa_number\"].value;\r\n      } else {\r\n        approval = \"Open\";\r\n        let checkID = this.cookieService.get('tokenFB_Num');\r\n        if ( checkID ) {\r\n\r\n          this.aoa_number = this.srk.decryptString(checkID);\r\n\r\n        }\r\n      }\r\n\r\n    // EDIT EXISTING RECORD\r\n    if (this.isEditable) {\r\n\r\n\r\n//      console.log('is editable');\r\n      //alert('is editable');\r\n\r\n      //console.log('update checks - supporting doc: ' + supporting_doc + ' docList: ' + this.docList + 'supporting_doc_from_db: ' + this.supporting_doc_from_db);\r\n\r\n      supporting_doc = supporting_doc + this.supporting_doc_from_db;\r\n\r\n      // NOTE: AUDIT FIELDS BELOW ARE RE-CREATED WITH CURRENT DATA FOR UPDATES\r\n      let getID = this.cookieService.get('tokenFB_Num');\r\n      this.created_by = this.srk.decryptString(getID);\r\n\r\n      this.created_by_process = \"user\"; // WHEN IMPORTED FROM GOOGLE SHEET, THIS IS SET AS 'system'\r\n\r\n      this.date_created = new Date();\r\n\r\n      let localtestCreate = this.date_created.toLocaleString();\r\n      let date_created_local = new Date(localtestCreate.replace(/-/g, '\\/'));\r\n\r\n    //  alert('date created with slashe: ' + testDate);\r\n \r\n      let temp_ce_date = this.ce_date.toLocaleString();\r\n      let ce_date_localtime = new Date(temp_ce_date.replace(/-/g, '\\/'));\r\n\r\n     // alert('ce date with localtime: ' + ce_date_localtime);\r\n\r\n\r\n      this._DB\r\n        .updateDocument(this._COLL, this.docID, {\r\n          ce_date: ce_date_localtime,\r\n          //date_entered: new Date(this.date_entered),\r\n          accreditor: accreditor,\r\n          credit_type1: credit_type1,\r\n          hours1: hours1,\r\n          hours_approved1: hours_approved1,\r\n          credit_type2: this.credit_type2,\r\n          hours2: hours2,\r\n          hours_approved2: hours_approved2,\r\n          credit_type3: this.credit_type3,\r\n          hours3: hours3,\r\n          hours_approved3: hours_approved3,\r\n          description: description,\r\n          supporting_doc: supporting_doc,\r\n          aoa_number: this.aoa_number,\r\n          approval: approval,\r\n          approval_reason: approval_reason,\r\n          created_by: this.created_by,\r\n          created_by_process: this.created_by_process,\r\n          date_created: date_created_local\r\n  })\r\n\r\n        .then(data => {\r\n          //this.clearForm();\r\n\r\nlet alert : any = this._ALERT.create({\r\ntitle : 'Document Update',\r\nsubTitle : 'You have updated a record for user ' + this.aoa_number,\r\nbuttons : [{\r\ntext : 'Okay',\r\nhandler : () =>\r\n{\r\n  if (!this.isAdmin) {\r\n//  this.HomePage();\r\n  this.navCtrl.push('HomePage', { isDataGridReset : true }); \r\n  }\r\n}\r\n}\r\n]\r\n});\r\nalert.present();\r\n        })\r\n        .catch(error => {\r\n          this.displayAlert(\"Updating document failed\", error.message);\r\n        });\r\n    }\r\n    \r\n// ADD NEW RECORD\r\nif (!this.isEditable) {\r\n    \r\n      // else {\r\n      // Otherwise we are adding a new record\r\n      // Call the DatabaseProvider service and pass/format the data for use\r\n      // with the addDocument method\r\n\r\n/* console.log('in the isEditable');\r\nconsole.log('this.form.valid ', this.form.valid);\r\nconsole.log('this.isAdmin ', this.isAdmin); */\r\n\r\n      let checkID = this.cookieService.get('tokenFB_Num');\r\n\r\n      this.created_by = this.srk.decryptString(checkID);\r\n\r\n      this.created_by_process = \"user\"; // WHEN IMPORTED FROM GOOGLE SHEET, THIS IS SET AS 'system'\r\n      this.date_created = new Date();\r\n\r\n      let localtestCreate = this.date_created.toLocaleString();\r\n      let date_created_local = new Date(localtestCreate.replace(/-/g, '\\/'));\r\n\r\n    //  alert('date created with slashe: ' + testDate);\r\n \r\n      let temp_ce_date = this.ce_date.toLocaleString();\r\n      let ce_date_localtime = new Date(temp_ce_date.replace(/-/g, '\\/'));\r\n\r\n\r\n      if (this.form.valid) {\r\n    //  } else {\r\n\r\n        console.log('looks like should be an add doc');\r\n\r\n        this._DB\r\n          .addDocument(this._COLL, {\r\n            ce_date: ce_date_localtime,\r\n            date_entered: new Date(this.date_created),\r\n            accreditor: accreditor,\r\n            credit_type1: credit_type1,\r\n            hours1: hours1,\r\n            hours_approved1: hours_approved1,\r\n            credit_type2: this.credit_type2,\r\n            hours2: hours2,\r\n            hours_approved2: hours_approved2,\r\n            credit_type3: this.credit_type3,\r\n            hours3: hours3,\r\n            hours_approved3: hours_approved3,\r\n            description: description,\r\n            supporting_doc: supporting_doc, \r\n            aoa_number: this.aoa_number,\r\n            approval: approval,\r\n            approval_reason: approval_reason,\r\n            created_by: this.created_by,\r\n            created_by_process: this.created_by_process,\r\n            date_created: date_created_local // THIS DATE GETS UPDATED WHEN RECORD IS UPDATED - IS THE LAST UPDATED AUDIT DATE\r\n          })\r\n          .then(data => {\r\n            this.clearForm();\r\n            this.displayAlert(\r\n              \"Record Added\",\r\n              \"Credits have been recorded and will be applied to the CME record upon approval by TOMA.\"\r\n            );\r\n            this.navCtrl.push('HomePage', { isDataGridReset : true }); //this.navCtrl.push(HomePage);\r\n          })\r\n          .catch(error => {\r\n            this.displayAlert(\"Adding document failed\", error.message);\r\n          });\r\n      }\r\n      else {\r\n        this.displayAlert(\"Form Incomplete\", \"Please complete the form (attachment not required)\");\r\n        \r\n        }\r\n  }\r\n}\r\n\r\n  /**\r\n   * Provide feedback to user after an operation has succeeded/failed\r\n   *\r\n   * @public\r\n   * @method displayAlert\r\n   * @param  title          {String}           Heading for alert message\r\n   * @param  message        {String}           Content for alert message\r\n   * @return {none}\r\n   */\r\n  displayAlert(title: string, message: string): void {\r\n    let alert: any = this._ALERT.create({\r\n      title: title,\r\n      subTitle: message,\r\n      buttons: [\"Got it!\"]\r\n    });\r\n    alert.present();\r\n  }\r\n\r\n  HomePage() {\r\n    //window.history.replaceState(null, null, window.location.pathname);\r\n    //alert('calling manage docs HomePage');\r\n    this.navCtrl.push('HomePage', { isDataGridReset : true });\r\n    //resetDataGrid\r\n    }\r\n\r\n  OpenImage(imageUrl) {\r\n  // alert('imageUrl: ' + imageUrl);\r\n    window.open(imageUrl, 'supporting document', 'width=900,height=1100');\r\n  }\r\n\r\n  /**\r\n   * Clear all form data\r\n   *\r\n   * @public\r\n   * @method clearForm\r\n   * @return {none}\r\n   */\r\n  clearForm(): void {\r\n    this.ce_date = \"\";\r\n    this.date_entered = \"\";\r\n    this.accreditor = \"\";\r\n    this.credit_type1 = \"\";\r\n    this.hours1 = 0;\r\n    this.hours_approved1 = 0;\r\n    this.hours2 = 0;\r\n    this.hours_approved2 = 0;\r\n    this.hours3 = 0;\r\n    this.hours_approved3 = 0;\r\n    this.delivery_method = \"\";\r\n    this.description = \"\";\r\n    this.supporting_doc = \"\";\r\n    this.approval = \"\";\r\n    this.approval_reason = \"\";\r\n    //this.aoa_number = \"\";\r\n    this.docList = [];\r\n    this.docListNames = [];\r\n    this.numFiles = 0;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/manage-document/manage-document.ts"]}